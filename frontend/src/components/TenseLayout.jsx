import React, { useState } from 'react';
import axios from 'axios';

const TenseLayout = ({ title, explanation, structure, examples, practiceTense }) => {
  const [input, setInput] = useState('');
  const [feedback, setFeedback] = useState('');

  const handleCheck = async () => {
    try {
      const res = await axios.post('http://localhost:8000/api/tense/check/', {
        sentence: input,
      });
      const predicted = res.data.tense.toLowerCase();
      if (predicted === practiceTense.toLowerCase()) {
        setFeedback('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —á–∞—Å.');
      } else {
        setFeedback(`‚ùå –í–∏—è–≤–ª–µ–Ω–∏–π —á–∞—Å: ${predicted}. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.`);
      }
    } catch (err) {
      setFeedback('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ.');
    }
  };

  return (
    <div style={{ padding: '2rem', maxWidth: '800px', margin: '0 auto' }}>
      <h1>{title}</h1>
      <p><strong>–ü–æ—è—Å–Ω–µ–Ω–Ω—è:</strong> {explanation}</p>
      <p><strong>–°—Ç—Ä—É–∫—Ç—É—Ä–∞:</strong> {structure}</p>

      <h3>–ü—Ä–∏–∫–ª–∞–¥–∏:</h3>
      <ul>
        {examples.map((ex, i) => (
          <li key={i}><strong>{ex.sentence}</strong> ‚Äì {ex.translation}</li>
        ))}
      </ul>

      <h3>üìù –ü—Ä–∞–∫—Ç–∏–∫–∞</h3>
      <textarea
        rows={3}
        value={input}
        onChange={(e) => setInput(e.target.value)}
        style={{ width: '100%', marginBottom: '1rem' }}
        placeholder="–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–∏–∫–ª–∞–¥ —É —Ü—å–æ–º—É —á–∞—Å—ñ..."
      />
      <button onClick={handleCheck}>–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏</button>
      <p>{feedback}</p>
    </div>
  );
};

export default TenseLayout;