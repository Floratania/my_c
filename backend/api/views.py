from django.utils import timezone
from datetime import datetime
import re
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from django.contrib.auth.models import User
from rest_framework_simplejwt.tokens import RefreshToken
from django.contrib.auth import authenticate
from rest_framework.decorators import api_view, permission_classes
from rest_framework.permissions import IsAuthenticated


class RegisterView(APIView):
    def post(self, request):
        data = request.data

        # üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
        required_fields = ['username', 'password', 'first_name', 'last_name', 'email', 'phone', 'birth_date', 'gender']
        for field in required_fields:
            if not data.get(field):
                return Response({'error': f"–ü–æ–ª–µ '{field}' —î –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–º"}, status=400)

        username = data['username']
        password = data['password']
        first_name = data['first_name']
        last_name = data['last_name']
        email = data['email']
        phone = data['phone']
        gender = data['gender']
        birth_date_str = data['birth_date']

        # üî∏ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if User.objects.filter(username=username).exists():
            return Response({'error': '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ç–∞–∫–∏–º —ñ–º º—è–º –≤–∂–µ —ñ—Å–Ω—É—î'}, status=400)

        # üî∏ –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É –¥–∞—Ç–∏ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è
        parsed_birth = None
        for fmt in ('%Y-%m-%d', '%d.%m.%Y'):
            try:
                parsed_birth = datetime.strptime(birth_date_str, fmt).date()
                break
            except ValueError:
                continue

        if not parsed_birth:
            return Response({
                'error': "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ YYYY-MM-DD –∞–±–æ DD.MM.YYYY"
            }, status=400)

        # üîû –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–∫—É
        today = timezone.now().date()
        age = (today - parsed_birth).days // 365
        if age < 13:
            return Response({'error': '–í–∞–º –º–∞—î –±—É—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 13 —Ä–æ–∫—ñ–≤'}, status=400)

        # ‚òéÔ∏è –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–µ–ª–µ—Ñ–æ–Ω—É
        if not re.fullmatch(r'^\d{10,15}$', phone):
            return Response({'error': '–¢–µ–ª–µ—Ñ–æ–Ω –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –ª–∏—à–µ —Ü–∏—Ñ—Ä–∏ (10‚Äì15 —Å–∏–º–≤–æ–ª—ñ–≤)'}, status=400)

        # üîê –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–∞—Ä–æ–ª—é
        if len(password) < 8 \
            or not re.search(r'[A-Za-z]', password) \
            or not re.search(r'\d', password) \
            or not re.search(r'[^\w\s]', password):
            return Response({
                'error': '–ü–∞—Ä–æ–ª—å –º–∞—î –±—É—Ç–∏ –º—ñ–Ω—ñ–º—É–º 8 —Å–∏–º–≤–æ–ª—ñ–≤, –º—ñ—Å—Ç–∏—Ç–∏ –±—É–∫–≤–∏, —Ü–∏—Ñ—Ä–∏ —Ç–∞ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∏'
            }, status=400)

        # ‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user = User.objects.create_user(
            username=username,
            password=password,
            first_name=first_name,
            last_name=last_name,
            email=email
        )

        # üìå –ó–∞–ø–∏—Å —É –ø—Ä–æ—Ñ—ñ–ª—å, —è–∫—â–æ —ñ—Å–Ω—É—î
        if hasattr(user, 'profile'):
            user.profile.phone = phone
            user.profile.birth_date = parsed_birth
            user.profile.gender = gender
            user.profile.save()

        return Response({'message': '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π'}, status=201)


class LoginView(APIView):
    def post(self, request):
        username = request.data.get('username')
        password = request.data.get('password')

        user = authenticate(username=username, password=password)
        if not user:
            return Response({'error': '–ù–µ–≤—ñ—Ä–Ω—ñ –æ–±–ª—ñ–∫–æ–≤—ñ –¥–∞–Ω—ñ'}, status=401)

        refresh = RefreshToken.for_user(user)
        return Response({
            'refresh': str(refresh),
            'access': str(refresh.access_token)
        })


@api_view(['GET'])
@permission_classes([IsAuthenticated])
def profile_view(request):
    return Response({
        'username': request.user.username
    })
